spring:
  application:
    name: wepro
  datasource:
    url: ${datasource.url}
    username: ${datasource.username}
    password: ${datasource.password}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect

  servlet:
    multipart:
      maxFileSize: 10MB # 파일 하나의 최대 크기
      maxRequestSize: 30MB  # 한 번에 최대 업로드 가능 용량

  thymeleaf:
    cache: false

  data:
    redis:
      host: localhost
      port: 6379

  security:
    debug: true
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${kakao.client-id}
            client-secret: ${kakao.client-secret}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: ${kakao.redirect-uri}
            scope: openid
            client-name: Kakao
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v1/oidc/userinfo
            user-name-attribute: sub
            jwk-set-uri: https://kauth.kakao.com/.well-known/jwks.json



jwt:
  secret: ${jwt.secret}

logging:
  level:
    org.springframework.web.client.RestTemplate: DEBUG
    org.springframework.security: DEBUG
    org.springframework.security.oauth2.client: DEBUG
    org.springframework.security.oauth2.core: DEBUG

app:
  cors:
    allowedOrigins: http://localhost:3000

server:
  servlet:
    session:
      cookie:
        same-site: Lax    # 크로스 도메인 세션 유지

cloud:
  aws:
    credentials:
      accessKey: ${aws.accessKey}
      secretKey: ${aws.secretKey}
    s3:
      bucket: wepro1
      folder: profile/
    region:
      static: "ap-northeast-2"
    stack:
      auto: false

